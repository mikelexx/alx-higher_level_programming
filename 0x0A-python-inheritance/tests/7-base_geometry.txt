>>> BaseGeometry = __import__('7-base_geometry').BaseGeometry

>>> bg= BaseGeometry()

>>> bg.area()
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
  File "/home/adminpc/alx-higher_level_programming/0x0A-python-inheritance/7-base_geometry.py", line 14, in area
    raise Exception("area() is not implemented")
Exception: area() is not implemented

>>> bg.area(1)
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
TypeError: BaseGeometry.area() takes 1 positional argument but 2 were given

===== tests for value must be integer=======================
>>> bg.integer_validator("my_int", 12)

>>> bg.integer_validator("width", True)
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
  File "/home/adminpc/alx-higher_level_programming/0x0A-python-inheritance/7-base_geometry.py", line 27, in integer_validator
    raise TypeError("{:s} must be an integer".format(name))
TypeError: width must be an integer

>>> bg.integer_validator("width", "1")
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
  File "/home/adminpc/alx-higher_level_programming/0x0A-python-inheritance/7-base_geometry.py", line 27, in integer_validator
    raise TypeError("{:s} must be an integer".format(name))
TypeError: width must be an integer

>>> bg.integer_validator("width", 0.0)
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
  File "/home/adminpc/alx-higher_level_programming/0x0A-python-inheritance/7-base_geometry.py", line 27, in integer_validator
    raise TypeError("{:s} must be an integer".format(name))
TypeError: width must be an integer

>>> bg.integer_validator("width", [1, 2])
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
  File "/home/adminpc/alx-higher_level_programming/0x0A-python-inheritance/7-base_geometry.py", line 27, in integer_validator
    raise TypeError("{:s} must be an integer".format(name))
TypeError: width must be an integer

>>> bg.integer_validator("width", (1, 2))
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
  File "/home/adminpc/alx-higher_level_programming/0x0A-python-inheritance/7-base_geometry.py", line 27, in integer_validator
    raise TypeError("{:s} must be an integer".format(name))
TypeError: width must be an integer

>>> bg.integer_validator("width", 'a')
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
  File "/home/adminpc/alx-higher_level_programming/0x0A-python-inheritance/7-base_geometry.py", line 27, in integer_validator
    raise TypeError("{:s} must be an integer".format(name))
TypeError: width must be an integer

>>> bg.integer_validator("width", False)
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
  File "/home/adminpc/alx-higher_level_programming/0x0A-python-inheritance/7-base_geometry.py", line 27, in integer_validator
    raise TypeError("{:s} must be an integer".format(name))
TypeError: width must be an integer

===================test for value must be greater than 0 ==========
>>> bg.integer_validator("width", 0)
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
  File "/home/adminpc/alx-higher_level_programming/0x0A-python-inheritance/7-base_geometry.py", line 29, in integer_validator
    raise ValueError("{:s} must be greater than 0".format(name))
ValueError: width must be greater than 0

>>> bg.integer_validator("width", 1)

>>> bg.integer_validator("width", 0.0)
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
  File "/home/adminpc/alx-higher_level_programming/0x0A-python-inheritance/7-base_geometry.py", line 27, in integer_validator
    raise TypeError("{:s} must be an integer".format(name))
TypeError: width must be an integer

>>> bg.integer_validator("width", -1)
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
  File "/home/adminpc/alx-higher_level_programming/0x0A-python-inheritance/7-base_geometry.py", line 29, in integer_validator
    raise ValueError("{:s} must be greater than 0".format(name))
ValueError: width must be greater than 0

>>> bg.integer_validator("width", -0)
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
  File "/home/adminpc/alx-higher_level_programming/0x0A-python-inheritance/7-base_geometry.py", line 29, in integer_validator
    raise ValueError("{:s} must be greater than 0".format(name))
ValueError: width must be greater than 0

>>> bg.integer_validator("width", 1)


