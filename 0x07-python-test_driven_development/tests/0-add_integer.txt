=======================
this function should add two and only two integers where default value of second argument is 98
=========================

>>> add_integer = __import__('0-add_integer').add_integer
>>> add_integer(1,1)
2
>>> add_integer("1", 1)
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
  File "/home/adminpc/alx-higher_level_programming/0x07-python-test_driven_development/0-add_integer.py", line 7, in add_integer
    raise TypeError("a must be an integer")
TypeError: a must be an integer
>>> add_integer(1, "1")
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
  File "/home/adminpc/alx-higher_level_programming/0x07-python-test_driven_development/0-add_integer.py", line 9, in add_integer
    raise TypeError("b must be an integer")
TypeError: b must be an integer
>>> add_integer("1", "1")
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
  File "/home/adminpc/alx-higher_level_programming/0x07-python-test_driven_development/0-add_integer.py", line 7, in add_integer
    raise TypeError("a must be an integer")
TypeError: a must be an integer
>>> add_integer(1.0, 2)
3
>>> add_integer(2, 2.0)
4
>>> add_integer(null, null)
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
NameError: name 'null' is not defined
>>> add_integer("mike")
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
  File "/home/adminpc/alx-higher_level_programming/0x07-python-test_driven_development/0-add_integer.py", line 7, in add_integer
    raise TypeError("a must be an integer")
TypeError: a must be an integer
>>> add_integer(add_integer)
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
  File "/home/adminpc/alx-higher_level_programming/0x07-python-test_driven_development/0-add_integer.py", line 7, in add_integer
    raise TypeError("a must be an integer")
TypeError: a must be an integer
>>> add_integer(-1, -2)
-3
>>> add_integer(-1, 1)
0
>>> add_integer(1, -1)
0
>>> add_integer(0)
98
>>> add_integer(0,1,2)
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
TypeError: add_integer() takes from 1 to 2 positional arguments but 3 were given
>>> add_integer([0, "2"])
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
  File "/home/adminpc/alx-higher_level_programming/0x07-python-test_driven_development/0-add_integer.py", line 7, in add_integer
    raise TypeError("a must be an integer")
TypeError: a must be an integer
>>> add_integer(True, True)
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
  File "/home/adminpc/alx-higher_level_programming/0x07-python-test_driven_development/0-add_integer.py", line 7, in add_integer
    raise TypeError("a must be an integer")
TypeError: a must be an integer
>>> add_integer(True, 1)
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
  File "/home/adminpc/alx-higher_level_programming/0x07-python-test_driven_development/0-add_integer.py", line 7, in add_integer
    raise TypeError("a must be an integer")
TypeError: a must be an integer
>>> add_integer(False, 1)
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
  File "/home/adminpc/alx-higher_level_programming/0x07-python-test_driven_development/0-add_integer.py", line 7, in add_integer
    raise TypeError("a must be an integer")
TypeError: a must be an integer
>>> 


